local data = require "main.data"

function init(self)
	if data.players == 1 or data.players == 2 then gui.set_text(gui.get_node("playerleft"), "PLAYER 1") end
	if data.players == 2 or data.players == 3 then gui.set_text(gui.get_node("playerright"), "PLAYER 2") end
end
	
local function updateleft(self, message)
	gui.set_scale(gui.get_node("p1_recharge"), vmath.vector3(message.recharge/100, 1, 1))

	for h = 1, message.hearts do
		local node = gui.get_node(string.format("p1h%d", h))
		gui.set_texture(node, "tiles")
		gui.play_flipbook(node, "heart1")
	end

	for h = message.hearts+1, 10 do
		local node = gui.get_node(string.format("p1h%d", h))
		gui.set_texture(node, "tiles")
		gui.play_flipbook(node, "heart0")
	end

	local node = gui.get_node("p1next")
	gui.set_texture(node, "tiles")
	gui.play_flipbook(node, string.format("proj%d", message.next))

	if message.recharge < 100 then gui.set_color(node, vmath.vector4(1,1,1,0))
	else gui.set_color(node, vmath.vector4(1,1,1,1))
	end
end

local function updateright(self, message)
	gui.set_scale(gui.get_node("p2_recharge"), vmath.vector3(message.recharge/100, 1, 1))

	for h = 1, message.hearts do
		local node = gui.get_node(string.format("p2h%d", h))
		gui.set_texture(node, "tiles")
		gui.play_flipbook(node, "heart1")
	end

	for h = message.hearts+1, 10 do
		local node = gui.get_node(string.format("p2h%d", h))
		gui.set_texture(node, "tiles")
		gui.play_flipbook(node, "heart0")
	end

	local node = gui.get_node("p2next")
	gui.set_texture(node, "tiles")
	gui.play_flipbook(node, string.format("proj%d", message.next))

	if message.recharge < 100 then gui.set_color(node, vmath.vector4(1,1,1,0))
	else gui.set_color(node, vmath.vector4(1,1,1,1))
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update") then
		if message.side == 1 then
			updateleft(self, message)
		else
			updateright(self, message)
		end
	end
end

