local data = require ("main.data")

local function disablenode (self, node)
	gui.set_enabled(node, false)
end

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("main:/sound", "stop_sound", {})
	self.node = gui.get_node("container")
	data.state = data.STATE_MENU
	msg.post("@render:", "clear_color", { color = vmath.vector4(40/255, 22/255, 46/255, 1) } )
end

local function show(self)
	gui.set_enabled(self.node, true)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(0, 0, 0), gui.EASING_INOUTQUAD, 0.5)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,1), gui.EASING_INOUTQUAD, 0.5)
	data.state = data.STATE_MENU
end

local function hide(self)
	gui.animate(self.node, gui.PROP_POSITION, vmath.vector3(0, -100, 0), gui.EASING_INOUTQUAD, 0.5, 0, disablenode)
	gui.animate(self.node, gui.PROP_COLOR, vmath.vector4(1,1,1,0), gui.EASING_INOUTQUAD, 0.5)
end

local function start_game(self)
	data.state = data.STATE_PLAYING
	sound.play("main:/sound#music", {gain = 0.1})
	msg.post("main:/handler", "show_game")
end
	
function on_input(self, action_id, action)
	if data.state == data.STATE_MENU then
		if action_id == hash("left") and action.pressed then
			data.level = data.maxlevel
			start_game(self)
		elseif action_id == hash("right") and action.pressed then
			hide(self)
			data.state = data.STATE_CONTROLS
			msg.post("#controls", "show", {})
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("show") then show(self)
	end
end